import random
import re
import tweepy
import time
import sys
reload(sys)
sys.setdefaultencoding('utf-8')
from botomatic import TBot

class TributeBot(TBot):
    debug_mode = False

    def __init__(self):
        handle = "TributeBot"
        super(TributeBot, self).__init__(handle)

    def run(self):
	query="('for the' OR 'unto the') (god OR gods OR goddess OR goddesses)"
	#print self.api.rate_limit_status()
	count = 0
	p = re.compile(r".*([^\s]+)s? (for|unto) the \1 (god|goddess)", re.IGNORECASE)
        for msgs in tweepy.Cursor(self.api.search, q=query, count=100).pages():
          print >>sys.stderr, "---" + str(len(msgs)) + " " + str(count)
	  for msg in msgs:
            count = count + 1
            t = msg.text

            m = p.match(msg.text)
            if m is None:
                continue
            print msg.user.screen_name.encode('utf-8') + u": " + msg.text.encode('utf-8')
            print >>sys.stderr, "*** " + str(msg.id) + " @" + msg.user.screen_name
	    #print msg
            try:
              if msg.user.screen_name != "godtributes":
	        self.api.retweet(msg.id)
            except:
              print >>sys.stderr, "retweet failed"
          time.sleep(5)

        self.wrap_up()



if __name__ == '__main__':
    m = TributeBot()
